cd ~/Desktop
nano install_notepad.yml

---
- name: Instalar Notepad++ en cliente Windows
  hosts: cliente2
  tasks:
    - name: Ejecutar el instalador de Notepad++
      ansible.windows.win_package:
        path: C:\Users\ansible\Downloads\npp_installer.exe
        state: present




ansible cliente2 -m win_copy -a 'src=/home/leury/Downloads/npp_installer.exe dest=C:\\Users\\ansible\\Downloads\\npp_installer.exe'

ansible-playbook install_notepad.yml







nano install_nginx.yml

---
- name: Instalar NGINX en cliente Linux
  hosts: cliente1
  become: true
  tasks:
    - name: Instalar NGINX
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Iniciar el servicio NGINX
      service:
        name: nginx
        state: started
        enabled: true



ansible-playbook install_nginx.yml

curl http:137.184.159.103




















# ============================================
# KALI (ANSIBLE CONTROLLER) — PREPARACIÓN
# Opción 1: usar virtualenv para pywinrm+credssp
# ============================================

sudo apt update                                   # Actualiza índices APT
sudo apt install -y ansible python3-venv          # Instala Ansible y módulo para crear venv

python3 -m venv ~/venvs/ansible-win               # Crea el entorno virtual para Ansible+WinRM
source ~/venvs/ansible-win/bin/activate           # Activa el venv (hacerlo siempre antes de usar Ansible)

pip install --upgrade pip                         # Actualiza pip dentro del venv
pip install "pywinrm[credssp]"                    # Instala WinRM + CredSSP en el venv (no toca el sistema)

# (Opcional) Forzar que Ansible use este Python del venv en esta sesión:
export ANSIBLE_PYTHON_INTERPRETER="$(which python)"   # Asegura que ansible use el Python del venv

# ============================================
# WINDOWS (ansible2) — PREPARACIÓN WINRM
# Ejecutar en PowerShell como Administrador
# ============================================

winrm quickconfig                                      # Habilita y configura WinRM básico (responder Y si pregunta)
winrm set winrm/config/service '@{AllowUnencrypted="true"}'   # Permite tráfico no cifrado (lab)
winrm set winrm/config/service/auth '@{Basic="true"}'          # Habilita auth Basic (lab)
New-NetFirewallRule -DisplayName "WinRM HTTPS" -Name "WinRM-HTTPS" -Protocol TCP -LocalPort 5986 -Action Allow  # Abre 5986
New-Item -ItemType Directory -Force -Path C:\Temp       # Carpeta temporal para instaladores



# ============================================
# KALI — INVENTARIO ANSIBLE
# Edita tu archivo de inventario (usa nano) y agrega el host Windows
# ============================================

nano hosts                                             # Abre/crea inventario

# Contenido a pegar (ajusta IP/usuario/clave):
# [win]
# ansible2 ansible_host=IP_WINDOWS ansible_user=USUARIO ansible_password=CLAVE ansible_connection=winrm ansible_winrm_server_cert_validation=ignore

# ============================================
# KALI — PRUEBA DE CONECTIVIDAD
# (Con el venv ACTIVADO)
# ============================================

ansible -i hosts win -m win_ping                       # Debe responder "pong" si todo está OK

# ============================================
# KALI — PLAYBOOK PARA INSTALAR NOTEPAD++
# Crea el archivo YAML y pega el contenido
# ============================================

nano instalar_notepad.yml

# Pegar este contenido YAML:


- name: Descargar instalador de Notepad++ en el Controller
  hosts: localhost
  gather_facts: false
  vars:
    npp_url: "https://github.com/notepad-plus-plus/notepad-plus-plus/releases/download/v8.6.8/npp.8.6.8.Installer.x64.exe"
    npp_local: "/tmp/npp_installer.exe"
  tasks:
    - name: Descargar instalador en Kali
      ansible.builtin.get_url:
        url: "{{ npp_url }}"
        dest: "{{ npp_local }}"
        mode: '0644'
        timeout: 60


- name: Instalar Notepad++ en ansible2
  hosts: win
  gather_facts: false
  vars:
    npp_local: "/tmp/npp_installer.exe"
    npp_win: "C:\\Temp\\npp_installer.exe"
  tasks:
    - name: Asegurar carpeta C:\Temp en Windows
      ansible.windows.win_file:
        path: "C:\\Temp"
        state: directory

    - name: Copiar instalador desde Kali a Windows
      ansible.windows.win_copy:
        src: "{{ npp_local }}"
        dest: "{{ npp_win }}"

    - name: Instalar Notepad++ en modo silencioso
      ansible.windows.win_package:
        path: "{{ npp_win }}"
        state: present
        arguments: /S




#para instalar:

source ~/venvs/ansible-win/bin/activate
export ANSIBLE_PYTHON_INTERPRETER="$(which python)"
ansible-playbook -i hosts instalar_notepad.yml







































# ====== 0) (Opcional) Instalar Ansible en el Controller ======
# Si ya tienes Ansible, salta este bloque.
sudo apt update && sudo apt install -y ansible sshpass

ssh-keygen -t rsa -b 4096 -C "tu_correo@example.com"

# ====== 1) Asegura que puedes entrar por SSH a la VM de DigitalOcean ======
# Sustituye XXX.XXX.XXX.XXX por la IP pública de tu droplet y la ruta de tu llave si aplica.
ssh -i ~/.ssh/id_rsa root@XXX.XXX.XXX.XXX "echo OK" 

# ====== 2) Crea el inventario de Ansible ======
# Define el grupo [digitalocean] con el host y el usuario root (recién creado por DO).
cat > inventario.ini <<'INI'
[digitalocean]
tu_vm_do ansible_host=XXX.XXX.XXX.XXX ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa
INI
# Reemplaza la IP en inventario.ini si no lo hiciste arriba.

# ====== 3) Crea el playbook (usuario, sudo, update/upgrade, bashtop) ======
# Nota: la contraseña 'adrian123' se cifra con SHA-512 por Ansible (password_hash).
cat > practica_c.yml <<'YAML'
---
- name: Practica C - Crear usuario, actualizar repos e instalar bashtop
  hosts: digitalocean
  become: yes
  tasks:
    - name: Actualizar índices y paquetes (tipo dist-upgrade)
      apt:
        update_cache: yes
        upgrade: dist

    - name: Asegurar que el grupo sudo existe (por si la distro lo nombra sudo)
      group:
        name: sudo
        state: present

    - name: Crear usuario adrian123 con sudo
      user:
        name: adrian123
        password: "{{ 'adrian123' | password_hash('sha512') }}"
        groups: sudo
        append: yes
        shell: /bin/bash
        state: present
      # Para deshabilitar password y usar solo SSH, añade: password_lock: yes

    - name: Instalar bashtop
      apt:
        name: bashtop
        state: present
YAML

# ====== 4) Ejecuta el playbook ======
ansible-playbook -i inventario.ini practica_c.yml

# ====== 5) Validación rápida ======
# a) Verifica que el usuario fue creado
ssh -i ~/.ssh/id_rsa root@XXX.XXX.XXX.XXX "id adrian123 || getent passwd adrian123"

# b) Prueba login con el nuevo usuario (si deseas activar clave, ya está definida como 'adrian123')
#    Seguridad: cámbiala luego con 'passwd' o usa solo SSH keys.
ssh -i ~/.ssh/id_rsa adrian123@XXX.XXX.XXX.XXX "bashtop --version || which bashtop"

# c) Inicia bashtop (salir con q)
ssh -t -i ~/.ssh/id_rsa adrian123@XXX.XXX.XXX.XXX "bashtop"







